x-app: &default-app
  build:
    context: .
  volumes:
    - .:/code
  restart: "unless-stopped"

services:
  db:
    image: postgres
    volumes:
      - viandasgo_volume:/var/lib/postgresql/data
    ports:
      - '5433:5432'
    env_file:
      - .env
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -U postgres' ]
      interval: 10s
      timeout: 5s
      retries: 3

  web:
    <<: *default-app
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    # command: tail -f /dev/null
    ports:
      - '8000:8000'
    env_file:
      - .env
    depends_on:
      - db

  tailwind:
    <<: *default-app
    command: "python manage.py tailwind start"
    # Without tty, no stdin, and tailwind watcher aborts
    # https://github.com/tailwindlabs/tailwindcss/issues/5324
    tty: true
    environment:
      - CHOKIDAR_USEPOLLING=1 # https://github.com/timonweb/django-tailwind/issues/190#issuecomment-1876120906
  #
  # celery:
  #   restart: always
  #   build: .
  #   command: celery -A backend.celery worker -l info -c 1
  #   volumes:
  #     - .:/code
  #   env_file:
  #     - .env
  #   depends_on:
  #     - db

  # celery-beat:
  #   restart: always
  #   build: .
  #   command: celery -A backend.celery beat -l info
  #   volumes:
  #     - .:/code
  #   env_file:
  #     - .env
  #   depends_on:
  #     - db

  # redis:
  #   image: redis
  #   command: redis-server --appendonly yes
  #   volumes:
  #     - redis_data:/data
  #   ports:
  #     - "6379:6379"
  #   env_file:
  #     - .env
  #   healthcheck:
  #     test: [ "CMD", "redis-cli", "ping" ]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 3

volumes:
  viandasgo_volume:
  redis_data:


networks:
  default:
    name: viandasgo_network
